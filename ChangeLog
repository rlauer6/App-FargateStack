Mon Aug  4 18:20:45 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.17]:
	* Makefile
	- create markdown from lib/App/FargateStack/Pod.pm
	* README.md: generatd
	* VERSION: bump
	* examples/README.md: wip
	* examples/minimal-task.yml
	* lib/App/ECS.pm.in
	(cluster_exists): select ACTIVE clusters
	* lib/App/FargateStack.pm.in
	(show_config): private <> public
	(cmd_run_task)
	- warn about public subnets
	- die if subnet-id invalid
	* lib/App/FargateStack/Builder/Events.pm.in
	(has_events): fix return value

Mon Aug  4 16:46:53 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.16]:
	* README.md: generated
	* VERSION: bump
	* lib/App/FargateStack.pm.in
	- move code to modules below
	* lib/App/FargateStack/Init.pm.in: new
	* lib/App/FargateStack/Logs.pm.in: new
	* lib/App/FargateStack/Pod.pm.in: new
	* lib/App/FargateStack/Route53.pm.in: new
	* Makefile: add above to build

Mon Aug  4 14:53:22 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.15]:
	* lib/App/FargateStack.pm.in:
	- pod updates
	(cmd_logs)
	- refactored using 'filter-log-events'
	(show_log_events): new
	(find_task_log_stream): new
	(help)
	- help help
	- use pager
	(main)
	- + --log-poll-time
	* lib/App/FargateStack/Builder/Utils.pm.in
	- export slurp_file
	* lib/App/FargateStack/Constants.pm.in
	- + help topics: ROADMAP, CONFIGURATION, TROUBLESHOOTING, CLI OPTION DEFAULTS
	- buckets

Mon Aug  4 09:45:49 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.14]:
	* docker/00-default.conf -> docker/000-default.conf
	* README.md: generated
	* VERSION: bump
	* docker/Dockerfile.apache
	- 000-default.conf was apparently correct
	* docker/HelloWorld.pl
	- log a message if no efs mount point environment variable
	* docker/Makefile
	- always push to ECR (for now)
	* lib/App/ECS.pm.in
	(update_service)
	- use named args
	- support --task-defintion, --force-new-deployment args
	* lib/App/ElbV2.pm.in
	(describe_load_balancers)
	- support --load-balancers-arn arg
	* lib/App/FargateStack.pm.in
	(init): bypass init flag for some commands
	(cmd_service_status)
	- refactoring
	- colors
	- fix pending
	- add task-definition
	(get_default_task_name): new
	(cmd_run_task)
	- refactoring
	- support --subnet-id arg
	- check that we running latest image
	(check_latest_image): new
	(get_default_service_name): new
	(cmd_create_service)
	- refactoring
	- check if running latest image
	(cmd_delete_service)
	- refactoring
	- verify service
	(verify_service): new
	(update_task_count): renamed from _update_task_count()
	(cmd_register)
	- refactoring
	- $task_definition, not $task_definition_arn
	(get_latest_image): new
	(cmd_stop_task): refactoring
	(cmd_redeploy): new
	(main)
	- + --force option to run task on old image, --subnet-id
	* lib/App/FargateStack/Builder/Service.pm.in
	(build_service)
	- refactoring
	- if http service, make sure we deploy in ALB subnets
	(get_service_subnets): new
	(get_alb_subnets): new
	* lib/App/FargateStack/Builder/Utils.pm.in
	(common_args): + cluster

Sun Aug  3 07:52:35 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.13]:
	* README.md: generated
	* VERSION: bump
	* lib/App/ECS.pm.in
	(describe_services): typo
	* lib/App/Events.pm.in
	(rule_exists)
	- just return the rule if we not checking schedule
	(put_rule)
	- add state to enable/disable rule
	(describe_rule): new
	(disable_rule): - --force
	* lib/App/FargateStack.pm.in
	(init)
	- fetch history defaults
	(_init_route53)
	- list-zones, not list-hosted-zones
	- delay return until after we set profile
	(check_service_name): check and/or return default service
	(cmd_service_status)
	- accept service-name argument
	- show max-events
	(cmd_update_service)
	- allow just count if we have just 1 service
	(cmd_stop_stask): allow no arg if just 1 service
	(cmd_enable_schedule_task): new
	(cmd_disable_schedule_task): new
	(cmd_reset_history): new
	(fetch_option_defaults): new
	(main)
	- new option --max-events, --history, --abbreviations
	* lib/App/FargateStack/Builder/Events.pm.in
	(build_events)
	- better log messages for event rule changes
	(update_rule_state): new
	* lib/App/FargateStack/Builder/Utils.pm.in
	(write_json_file): new
	* examples/minimial-scheduled-task.yml
	- my-cron-job, not my-one-shot

Sat Aug  2 15:01:28 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.12]:
	* README.md: generated
	* VERSION: bump
	* docker/HelloWorld.pl
	- use env var HAS_EFS_MOUNT
	* lib/App/FargateStack.pm.in
	(_init_route53): use route_53 from command line if present
	(cmd_logs)
	- croak if no log stream found
	(cmd_register)
	- croak if API eror
	- get_skip_register, not skip_register
	(main): add route53-profile
	* lib/App/FargateStack/Builder.pm.in
	(build)
	- build security groups, task definitions and THEN events
	* lib/App/FargateStack/Builder/Events.pm.in
	(create_event_target)
	- refactoring
	- check if current task definition exists before comparing
	- output target if error
	* lib/App/FargateStack/Builder/IAM.pm.in
	(build_iam_role)
	- create policy when it doesn't exist or we don't have an ARN
	- fix policy exists logic
	(create_farget_role): ecs, not ecs-tasks
	(create_role): refactoring
	* lib/App/FargateStack/Builder/Secrets.pm.in: use log_die
	* lib/App/FargateStack/Builder/SecurityGroup.pm.in
	(build_security_group)
	- fix log_die error message
	* lib/App/FargateStack/Builder/TaskDefinition.pm.in
	(comapare_task_definition)
	- make sure $secrets is an array
	- show diffs
	* lib/App/FargateStack/Constants.pm.in
	- use ecs instead of task for service domain keys
	* examples/README.md: new


Sat Aug  2 08:45:51 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.11]:
	* VERSION: bump
	* docker/.gitignore: new
	* docker/000-default.conf -> docker/00-default.conf
	* docker/Dockerfile.apache
	- start-server => start-apache
	* docker/Makefile: new
	* docker/README.md: generated
	* docker/README.md.in: new
	* deploy-to-ecr -> docker/deploy-to-ecr

Fri Aug  1 17:15:41 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.10]:
	* README: generated
	* VERSION: bump
	* lib/App/FargateStack.pm.in
	- pod updates (SECRETS)
	(get_task_status): order of keys incorrect, swap container, stop_reason
	* lib/App/FargateStack/Builder/TaskDefinition.pm.in
	(create_taskdef_files): add_secrets returns array ref, not list

Fri Aug  1 12:36:45 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.9]:
	* .gitignore
	- +.tdy, .LOG
	* README.md: generated
	* VERSION: bump
	* requires: CLI::Simple 1.0.0
	* lib/App/FargateStack.pm.in
	(main): update log levels for some commands
	(init)
	- remove log_level munging (now done in run)
	(init_tasks): whitespace
	(cmd_service_status): refactoring
	(cmd_run_task): likewise
	(cmd_list_tasks): likewise
	(cmd_logs): likewise
	(get_task_status): new
	* lib/App/FargateStack/Builder/Utils.pm.in
	(jmespath_mapping): support array or hash list

Fri Aug  1 08:28:10 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.8]:
	* .gitignore
	- *.yml, test-*.pl, packages, requires.in
	* Makefile
	- new target 'requires'
	- add TOC to README.md
	* README-FARGATE.md: minor tweaks
	* VERSION: bump
	* lib/App/Command.pm.in: trace message to dump command
	* lib/App/ECS.pm.in
	(list_tasks): new
	(stop_task): new
	* lib/App/FargateStack.pm.in
	- updated pod
	(init)
	- add additional command that log @ error level
	- use english $^S
	(cmd_service_status): wrap events at 100 columns
	(_init_config)
	- use fargate-stack.yml as default
	- allow enviroment variable for default configuration name
	(cmd_update_service)
	- add a sleep so we can get updated status
	(cmd_register)
	- refactoring
	- update config with new arn
	(help)
	- show USAGE for help
	(cmd_stop_task): new
	(cmd_list_tasks): new
	(cmd_update_policy): new
	(main)
	- - --force
	- one-letter abbreviations missing for some options
	- + list-tasks, stop-task, update-policy
	* lib/App/FargateStack/Builder/EFS.pm.in
	(add_volumes)
	- use default mount point of /mnt
	- minor refactoring
	* lib/App/FargateStack/Builder/IAM.pm.in
	(build_iam_role)
	- major refactoring
	- better logging
	- display diffs in a friendlier way
	(create_fargate_policy): new
	* lib/App/FargateStack/Builder/S3Bucket.pm.in
	(add_bucket_policy)
	- + readonly option
	- + paths option
	* lib/App/FargateStack/Builder/SQSQueue.pm.in
	(build_queue)
	- refactoring
	- support for dead letter queues
	(ensure_queue_arn): new
	(queue_exists): new
	(apply_queue_defaults): new
	(add_queue_policy): support for dlq
	* lib/App/FargateStack/Builder/Utils.pm.in
	(common_args): new
	(display_diffs): new
	(ToCamelCase): new
	(toCamelCase): new
	(_toCamelCase): new
	(jmespath_mapping): new
	(elapsed_time): new
	* lib/App/FargateStack/Constants.pm.in
	- + $DEFAULT_SQS+
	- + $QUEUE_ATTRIBUTES
	- + help topics CLOUDWATCH_LOGS, COMMAND LIST
	* lib/App/SQS.pm.in
	- + max_receive_count, delay_seconds, arn, url
	(set_attributes): new
	(get_queue_arn): new
	(create_queue)
	- use constants
	- support dead letter queues
	* my-stack-minimal.yml
	* requires
	- + Carp::Always, Text::Diff, Time::Piece, Date::Parse, IO::Pager
	* examples/minimal-task.yml: renamed from my-stack-minimal.ym
	* examples/minimal-scheduled-task.yml: new
	* examples/minimal-https.yml: new
	* examples/minimal-http.yml: new
	* examples/minimal-daemon.yml: new
	* docker/000-default.conf: new
	* docker/Dockerfile.apache: new
	* docker/HelloWorld.pl: moved from root
	* docker/apache2.conf: new
	* docker/bookworm-backports.list: new
	* docker/start-apache: new

Tue Jul 29 16:14:46 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.7]:
	* README.md: generated
	* VERSION: bump
	* lib/App/ECS.pm.in
	(describe_services): new
	* lib/App/FargateStack.pm.in
	(init)
	- call _init_route53() unconditionally and let it figure it out
	- set log-level to error for commands that shouldn't log
	- command(), not get_command()
	(show_config): log_level may not be initialized yet?
	(_init_defaults):
	- save last_updated and delete last_updated and id from config
	- force cache off if config was invalidated
	(_init_route53)
	- return if not a command that needs route53
	- get_cache, not cache()
	(cmd_logs)
	- refactoring
	- order-by, descending (need most recent log stream)
	- standardize log message output
	(_init_ec2): debug message
	(cmd_service_status): new
	(_init_config): don't invalidate config here, too early
	(cmd_run_task): standardize log message output
	(check_task): new
	(cmd_stop_service): removed
	(cmd_start_service): removed
	(cmd_update_service): replaces above
	(_update_task_count): new
	(init_logger): default 'info'
	(main)
	- log-time default now true
	- added command status
	* lib/App/FargateStack/Builder/HTTPService.pm.in
	(create_alb)
	- create alb in public or private subnet depending on service type (http/https)

Tue Jul 29 09:32:14 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.6]:
	* VERSION: bump
	* README.md: generated
	* lib/App/FargateStack.pm.in
	- pod updates
	(init)
	- die handler for keeping config file in sync
	- force --no-cache if config file out of sync
	(_init_route53): refactoring
	(_init_defaults): moved setting of cache here
	(cmd_stop_service): first implementation
	(cmd_list_hosted_zones): SCRIPT_NAME no SCRIPT_PATH
	(cmd_run_task): likewise
	(cmd_register): likewise
	(_init_config)
	- likewise
	- invalidate config object
	- add config_name to configuration object
	(display_hosted_zones): set route53 if not set

Mon Jul 28 15:52:08 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.5]:
	* README.md
	* VERSION
	* lib/App/EC2.pm.in
	(new): find eligible VPC if no vpc_id
	(find_eligible_vpcs): new
	(describe_internet_gateways): new
	(describe_vpc_nat_gateways): new
	(describe_nat_gateways): refactored
	* lib/App/FargateStack.pm.in
	(_init_ec2): no longer using default VPC
	* lib/App/FargateStack/Builder/Events.pm.in
	(build_events)
	- log_die
	* lib/App/FargateStack/Builder/LogGroup.pm.in
	(build_log_groups): look for group again if arn is missing

Mon Jul 28 13:24:03 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.4]:
	* VERSION: bump
	* README.md: generated
	* lib/App/EC2.pm.in
	(new)
	- validate subnet ids against usable list
	(describe_nat_gateways): new
	(find_public_subnets): refactored
	(find_private_subnets): likewise
	(_find_subnets): likewise
	(describe_route_tables): new
	(list_route_table_associations): new
	(categorize_subnets): rename from find_all_subnets()
	* lib/App/FargateStack.pm.in
	- pod updates
	(show_config): zone_id // -
	(cmd_logs): new
	(normlize_time_range): new
	(_to_epoch): new
	(_init_ec2)
	- don't set subnets until they are verified
	(cmd_run_task)
	- remove magic values, use constants
	- iterate until no more message
	- better formatting of messages
	(main)
	- + log-time, log-wait, task-timeout
	- + logs command
	* lib/App/FargateStack/Constants.pm.in
	- +$DEFAULT_ECS*, $DEFAULT_LOG*, $SEC_*
	* lib/App/Logs.pm.in
	- +log_stream_name,
	(get_log_events)
	- renamed from get_log_event()
	- use defaults
	(get_next_log_events): new
	* my-stack-minimal.yml

Sun Jul 27 15:56:28 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.3]:
	* Makefile
	- build lib/App/FargateStack.pm separately
	* README.md: generated
	* VERSION: bump
	* lib/App/AWS.pm.in
	- get_logger, not log_error
	* lib/App/Command.pm.in
	- log4perl_conf may not be available so eval
	* lib/App/EC2.pm.in
	(is_sg_authorized): new
	(find_security_group_name): new
	* lib/App/ECS.pm.in
	- require servic_name, security_groups
	- set container port to default
	* lib/App/ElbV2.pm.in
	(create_target_group): add health checks
	(_create_health_check_options): new
	(list_certificates): new
	- removed add_certficate since we have add_listener_certificates()
	* lib/App/FargateStack.pm.in
	- pod updates
	(show_config): new
	(init)
	- trace level for Dumper messages
	- don't allow --no-update and apply because we need to record some state
	- use log_info
	- add route53_profile, profile_source, update-config, dryrun settings to init messages
	(init_tasks)
	- dump images, tasks if some task does not have an image
	- fix log_die message
	(_init_defaults):
	- set profile source
	- update route53 config
	(_init_route53)
	- trace level for Dumper messages
	- dump alb, http setting in debug mode
	- display hosted zones if zone invalid
	- find the zone if it is not provided
	(cmd_list_zones): new
	(display_hosted_zones): new
	(_init_ec2): log_warn
	(_init_config): log_info
	(cmd_run_task): -sprintf
	(cmd_create_service): likewise
	(cmd_register): -likewise
	(help)
	- fix subject parsing
	- can't use ?, use help list
	- regex matching
	(cmd_plan): new
	(cmd_apply): new
	(cmd_update_target): new
	(main)
	- + profile_source
	- move default options to %default_options
	- move commands to %commands
	(create_rule): log debug message
	(validate_alb)
	- validate the alb by scheme
	* lib/App/FargateStack/Builder.pm.in
	(build)
	- log_info, log_warn
	- log if we update the config
	(configure_alb)
	- set ALB type based on task type (http or https)
	* lib/App/FargateStack/Builder/Certificate.pm.in
	- log_info, log_warn
	* lib/App/FargateStack/Builder/HTTPService.pm.in
	(build_http_service)
	- log_warn
	- attach_certificate() if is_https
	- check to see if we need to authorize ingress
	(attach_certificate): new
	(create_listeners)
	- trace level for Dumper messages
	- don't redirect unless secure and redirect_80 set
	- log_info, log_warn
	- add_listener_certificates(), not add_certificate()
	- $elb->fetch_rule_arns_by_arn
	(create_target_group)
	- add health checks
	- task, not service
	- log_info, log_warn
	(create_alb)
	- log_info, log_warn, log_die
	- better die message if we can't describe alb
	- update alb security group name
	- moved message about finding sg with ingress
	- trace level for Dumper messages
	(create_alias)
	- log_info, log_warn
	- don't create alias record if one exists
	* lib/App/FargateStack/Builder/LogGroups.pm.in
	(build_log_groups):
	- update log group name from arn if needed
	- fix log group arn when first creating
	* lib/App/FargateStack/Builder/IAM.pm.in
	(build_iam_role)
	- trace level for Dumper messages
	- check policy if we don't see a name in the config
	- if we have an ARN for the role we probably created the policy
	- log_warn
	- add debug logging
	(create_role)
	- trace level for Dumper messages
	- use %AWS_SERVICE_DOMAINS instead of constructing service
	- refactoring using choose(), sub {}
	- log_warn
	- add debug logging
	* lib/App/FargateStack/Builder/SecurityGroup.pm.in
	(build_security_group)
	- trace level for Dumper messages
	- log_die
	- add debug logging
	- make sure group_id gets set in config
	* lib/App/FargateStack/Builder/Service.pm.in
	(build_service)
	- service_name, not task_name
	- specify container port
	* lib/App/FargateStack/Builder/TaskDefinition.pm.in
	(create_taskdef_files)
	- update port values in config
	(register_task_definition)
	- log_warn, log_die, log_info
	- cpu, memory must be string
	(compare_task_definition)
	- set to false if no current task definition exists
	* lib/App/FargateStack/Builder/Utils.pm.in
	(choose): new
	(dmp): new
	* lib/App/FargateStack/Constants.pm.in
	- + $DEFAULT_HEALTH_CHECK_*
	- + %AWS_SERVICE_DOMAINS
	- remove load balancers, one shot
	- add scheduled jobs, environment variables, secrets, queues, buckets
	- add log groups, efs support, filesystem support
	* lib/App/Route53.pm.in
	- + unlink
	(find_hosted_zone): new
	(create_alias)
	- required ALB DNS name and ALB zone now instead of find using ALB ARN
	- fix Changes payload
	(change_resource_record_sets)
	- die instead of croak
	- use unlink
	- payload already includes Changes
	(list_hosted_zones): new
	(validate_hosted_zones)
	- die instead of croak
	(find_alias_record): new
	* my-stack-minimal.yml

Thu Jul 24 14:50:31 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.2]:
	* README.md: generated
	* VERSION: bump
	* lib/App/AWS.pm.in
	(command)
	- log result in trace mode
	- use log_error
	* lib/App/Command.pm.in
	(execute)
	- log flattended command
	- use log_error
	* lib/App/EC2.pm.in
	(new)
	- cache subnets
	- use log_die
	(find_public_subnets): use cached version
	(find_private_subnets): likewise
	* lib/App/FargateStack.pm.in
	- +events, iam, logs, cache
	- pod updates
	(init)
	- setup cache str
	- log cache
	- don't validate images if cached
	(_init_account)
	- use cached account
	- use log_infi, log_die
	(_init_ec2)
	- pass subnets if caching
	- do not validate subnets if caching
	(help)
	- display list of subjects in ASCII table
	- use pager
	* lib/App/FargateStack/Builder.pm.in
	(update_config_id): new
	* lib/App/FargateStack/Builder/Cluster.pm.in
	- cache cluster
	- removed create_fargate_role
	* lib/App/FargateStack/Builder/EFS.pm.in
	(add_volumes)
	- +readonly
	- cached EFS parameters
	* lib/App/FargateStack/Builder/SecurityGroup.pm.in
	(build_security_group)
	- use cache
	- refactoring
	* lib/App/FargateStack/Builder/Events.pm.in
	(build_events)
	- some refactoring
	(create_event_target)
	- likewise
	- use log_die
	(build_events_iam_role)
	- refactoring
	- use cache
	- use log_die
	- update policy_name
	(fetch_events): new
	* lib/App/FargateStack/Builder/IAM.pm.in
	(build_iam_role)
	- refactoring
	- use cache
	- use log_die
	(create_role)
	- use cache
	- use log_info
	- use log_die
	(fetch_iam): new
	* lib/App/FargateStack/Builder/LogGroup.pm.in
	- refactoring
	- use cache
	(fetch_logs): new
	* lib/App/FargateStack/Builder/Secrets.pm.in
	- refactoring
	- store arn
	- use cache
	* lib/App/FargateStack/Builder/TaskDefinition.pm.in
	(write_taskdef)
	- refactoring
	(compare_task_definition): new
	* lib/App/FargateStack/Builder/Utils.pm.in: +log_trace
	* lib/App/FargateStack/Constants.pm.in
	- +$DEFAULT_LOG_RETENTION_DAYS, $SPACE, $DASH, $CLOUDWATCH_LOGS_RETENTION_DAYS
	- %HELP_SUBJECT values now array
	- add bold white for TRACE level
	* lib/App/Logs.pm.in
	- refactoring

Wed Jul 23 08:00:19 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.1]:
	* .gitignore: *.bak, \#
	* README: generated
	* VERSION: bump
	* fargate-stack-orig.yml: deleted
	* fargate-stack.yml: deleted
	* lib/App/Bencmark.pm.in: deleted
	* ChangeLog
	* HelloWorld.pl
	* README.md
	* lib/App/Benchmark.pm.in
	(dump_benchmarks): return sorted list
	* lib/App/Command.pm.in
	(get_logger): use custom config if available
	* lib/App/ECS.pm.in
	(describe_tasks): new
	(run_task): new
	(wait_tasks_stoped): new
	* lib/App/ElbV2.pm.in: -File::Temp
	* lib/App/Events.pm.in
	- unlink
	(remove_targets): new
	(list_rules_by_target): new
	(put_targets): use unlink value
	* lib/App/Logs.pm.in
	(get_log_events): new
	* lib/App/Secrets.pm.in: remove unnecessary modules
	* lib/App/FargateStack.pm.in
	- override init_logger()
	(_init_tasks)
	- use log_die instead of croak
	- add unlink to global_options (to pass to App::*)
	(_init_config)
	- tweak some error messages
	(cmd_run_task): new
	(cmd_register): new
	(init_logger): new
	(cmd_delete_service)
	- service_name => task_name
	- log_die instead of croak
	(cmd_create_service): likewise
	(main)
	- +options: logger, color, force, log-level, skip-register, unlink, wait
	- +commands: run-task, update-target, register
	* lib/App/FargateStack/Builder.pm.in
	(build): better messages at end of run
	* lib/App/FargateStack/Builder/EFS.pm.in
	(add_volumes)
	- FileSystemArn not fileSystemArn
	- volumes and mount points should be arrays
	(add_efs_policy): fat arrow mistakenly replaced :
	* lib/App/FargateStack/Builder/Events.pm.in
	- add global options when creating events object
	(build_events)
	- delete rule if taskdef changes
	- change info messages to warn
	(create_event_target)
	- add global options when creating events object
	- check to if taskdef arn has changes and remove target
	(put_targets): use unlink value
	* lib/App/FargateStack/Builder/IAM.pm.in
	- change info messages to warn
	* lib/App/FargateStack/Builder/TaskDefinition.pm.in
	- change info messages to warn
	- tweak some error messages
	- fixed log_stream_prefix value
	- log message when writing the taskdef
	* lib/App/FargateStack/Builder/Utils.pm.in
	(log_fatal): new
	(log_die): new
	* lib/App/FargateStack/Constants.pm.in
	- + $DEFAULT_RUL_ID, $LOG4PERL_CONF
	* lib/App/IAM.pm.in
	- remove unnecessary modules
	- + unlink
	(policy_exists): use command()
	(create_policy): use unlink value
	(is_policy_attached): uase command()
	(put_role_policy): use unlink value
	(create_role): likewise
	* requires
	- + Data::Compare, -Carp::Always

Fri Jul 18 10:40:23 2025  Rob Lauer  <rlauer6@comcast.net>

	[BigBang - 1.0.0]:
	* .gitignore: new
	* ChangeLog: new
	* Dockerfile: new
	* HelloWorld.pl: new
	* Makefile: new
	* README.md: new
	* VERSION: new
	* bin/app-FargateStack: new
	* buildspec.yml: new
	* deploy-to-ecr: new
	* fargate-stack-orig.yml: new
	* fargate-stack.yml: new
	* fargate-template.yml: new
	* lib/App/ACM.pm.in: new
	* lib/App/AWS.pm.in: new
	* lib/App/Benchmark.pm.in: new
	* lib/App/Bencmark.pm.in: new
	* lib/App/Command.pm.in: new
	* lib/App/EC2.pm.in: new
	* lib/App/ECR.pm.in: new
	* lib/App/ECS.pm.in: new
	* lib/App/EFS.pm.in: new
	* lib/App/ElbV2.pm.in: new
	* lib/App/Events.pm.in: new
	* lib/App/FargateStack.pm.in: new
	* lib/App/FargateStack/Builder.pm.in: new
	* lib/App/FargateStack/Builder/Certificate.pm.in: new
	* lib/App/FargateStack/Builder/Cluster.pm.in: new
	* lib/App/FargateStack/Builder/EFS.pm.in: new
	* lib/App/FargateStack/Builder/Events.pm.in: new
	* lib/App/FargateStack/Builder/HTTPService.pm.in: new
	* lib/App/FargateStack/Builder/IAM.pm.in: new
	* lib/App/FargateStack/Builder/LogGroup.pm.in: new
	* lib/App/FargateStack/Builder/S3Bucket.pm.in: new
	* lib/App/FargateStack/Builder/SQSQueue.pm.in: new
	* lib/App/FargateStack/Builder/Secrets.pm.in: new
	* lib/App/FargateStack/Builder/SecurityGroup.pm.in: new
	* lib/App/FargateStack/Builder/Service.pm.in: new
	* lib/App/FargateStack/Builder/TaskDefinition.pm.in: new
	* lib/App/FargateStack/Builder/Utils.pm.in: new
	* lib/App/FargateStack/Constants.pm.in: new
	* lib/App/IAM.pm.in: new
	* lib/App/Logs.pm.in: new
	* lib/App/Route53.pm.in: new
	* lib/App/S3Api.pm.in: new
	* lib/App/SQS.pm.in: new
	* lib/App/STS.pm.in: new
	* lib/App/SecretsManager.pm.in: new
	* my-stack-minimal.yml: new
	* requires: new
	* t/00-app-fargatestack.t: new
	* test-requires: new
	* version.mk: new




